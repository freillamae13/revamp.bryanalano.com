{"version":3,"sources":["includes/_mixins.scss","fonts.scss"],"names":[],"mappings":"AA0LC,UAAU,CACT,WAAW,CCnLM,UAAU,CDoL3B,YAAY,CAAE,IAAI,CAGlB,GAAG,CARgB,mCAAiC,CAAC,aAAsB,CAAxD,mCAAiC,CAAC,cAAsB,CAAxD,kCAAiC,CAAC,kBAAsB,CAAxD,oEAAiC,CAAC,aAAsB,CAG5E,UAAU,CACT,WAAW,CC9KM,WAAW,CD+K5B,YAAY,CAAE,IAAI,CAGlB,GAAG,CARgB,wCAAiC,CAAC,aAAsB,CAAxD,wCAAiC,CAAC,cAAsB,CAAxD,uCAAiC,CAAC,kBAAsB,CAAxD,0EAAiC,CAAC,aAAsB,CAG5E,UAAU,CACT,WAAW,CC7KM,WAAW,CD8K5B,YAAY,CAAE,IAAI,CAElB,WAAW,CChLiD,IAAI,CDiLhE,GAAG,CARgB,wCAAiC,CAAC,aAAsB,CAAxD,wCAAiC,CAAC,cAAsB,CAAxD,uCAAiC,CAAC,kBAAsB,CAAxD,0EAAiC,CAAC,aAAsB,CAG5E,UAAU,CACT,WAAW,CC5KM,WAAW,CD6K5B,YAAY,CAAE,IAAI,CAElB,WAAW,CC/KkD,GAAG,CDgLhE,GAAG,CARgB,yCAAiC,CAAC,aAAsB,CAAxD,yCAAiC,CAAC,cAAsB,CAAxD,wCAAiC,CAAC,kBAAsB,CAAxD,2EAAiC,CAAC,aAAsB,CAG5E,UAAU,CACT,WAAW,CC1KM,gBAAgB,CD2KjC,YAAY,CAAE,IAAI,CAGlB,GAAG,CARgB,wCAAiC,CAAC,aAAsB,CAAxD,wCAAiC,CAAC,cAAsB,CAAxD,uCAAiC,CAAC,kBAAsB,CAAxD,+EAAiC,CAAC,aAAsB,CAG5E,UAAU,CACT,WAAW,CCzKM,gBAAgB,CD0KjC,YAAY,CAAE,IAAI,CAGlB,GAAG,CARgB,wCAAiC,CAAC,aAAsB,CAAxD,wCAAiC,CAAC,cAAsB,CAAxD,uCAAiC,CAAC,kBAAsB,CAAxD,+EAAiC,CAAC,aAAsB,CAG5E,UAAU,CACT,WAAW,CCxKM,iBAAiB,CDyKlC,YAAY,CAAE,IAAI,CAGlB,GAAG,CARgB,yCAAiC,CAAC,aAAsB,CAAxD,yCAAiC,CAAC,cAAsB,CAAxD,wCAAiC,CAAC,kBAAsB,CAAxD,iFAAiC,CAAC,aAAsB","file":"fonts.css","sourcesContent":["\r\n@mixin transition($args...) {\r\n\t-webkit-transition: $args;\r\n\t-moz-transition: $args;\r\n\t-ms-transition: $args;\r\n\t-o-transition: $args;\r\n\ttransition: $args;\r\n}\r\n\r\n@mixin transform($args...) {\r\n\t-webkit-transform: $args;\r\n\t-moz-transform: $args;\r\n\t-ms-transform: $args;\r\n\t-o-transform: $args;\r\n\ttransform: $args;\r\n}\r\n\r\n@mixin transform-origin($args...) {\r\n\t-webkit-transform-origin: $args;\r\n\t-moz-transform-origin: $args;\r\n\t-ms-transform-origin: $args;\r\n\t-o-transform-origin: $args;\r\n\ttransform-origin: $args;\r\n}\r\n\r\n@mixin transition-property($args...) {\r\n\t-webkit-transition-property: $args;\r\n\t-moz-transition-property: $args;\r\n\t-ms-transition-property: $args;\r\n\t-o-transition-property: $args;\r\n\ttransition-property: $args;\r\n}\r\n\r\n@mixin transition-duration() {\r\n\t-webkit-transition-duration: $args;\r\n\t-moz-transition-duration: $args;\r\n\t-ms-transition-duration: $args;\r\n\t-o-transition-duration: $args;\r\n\ttransition-duration: $args;\r\n}\r\n\r\n@mixin appearance($args...) {\r\n\t-webkit-appearance: $args;\r\n\t-moz-appearance: $args;\r\n\t-o-appearance: $args;\r\n\t-ms-appearance: $args;\r\n\tappearance: $args;\r\n}\r\n\r\n@mixin box-shadow($args...) {\r\n\t-webkit-box-shadow: $args;\r\n\t-moz-box-shadow: $args;\r\n\t-o-box-shadow: $args;\r\n\t-ms-box-shadow: $args;\r\n\tbox-shadow: $args;\r\n}\r\n\r\n@mixin border-radius($args...) {\r\n\t-webkit-border-radius: $args;\r\n\t-moz-border-radius: $args;\r\n\t-o-border-radius: $args;\r\n\t-ms-border-radius: $args;\r\n\tborder-radius: $args;\r\n}\r\n\r\n@mixin box-sizing($args...) {\r\n\t-webkit-box-sizing: $args;\r\n\t-moz-box-sizing: $args;\r\n\t-o-box-sizing: $args;\r\n\t-ms-box-sizing: $args;\r\n\tbox-sizing: $args;\r\n}\r\n\r\n@mixin writing-mode($args, $ie_args) {\r\n\t-ms-writing-mode: $ie_args;\r\n\t-webkit-writing-mode: $args;\r\n\t-moz-writing-mode: $args;\r\n\t-o-writing-mode: $args;\r\n\t-ms-writing-mode: $args;\r\n\twriting-mode: $args;\r\n}\r\n\r\n@mixin transition-delay($args...) {\r\n\t-webkit-transition-delay: $args;\r\n\t-moz-transition-delay: $args;\r\n\t-o-transition-delay: $args;\r\n\t-ms-transition-delay: $args;\r\n\ttransition-delay: $args;\r\n}\r\n\r\n@mixin transition-duration($args...) {\r\n\t-webkit-transition-duration: $args;\r\n\t-moz-transition-duration: $args;\r\n\t-o-transition-duration: $args;\r\n\t-ms-transition-duration: $args;\r\n\ttransition-duration: $args;\r\n}\r\n\r\n@mixin animation($args...) {\r\n\t-webkit-animation: $args;\r\n\t-moz-animation: $args;\r\n\t-o-animation: $args;\r\n\t-ms-animation: $args;\r\n\tanimation: $args;\r\n}\r\n\r\n@mixin animation-name($args...) {\r\n\t-webkit-animation-name: $args;\r\n\t-moz-animation-name: $args;\r\n\t-o-animation-name: $args;\r\n\t-ms-animation-name: $args;\r\n\tanimation-name: $args;\r\n}\r\n\r\n@mixin animation-duration($args...) {\r\n\t-webkit-animation-duration: $args;\r\n\t-moz-animation-duration: $args;\r\n\t-o-animation-duration: $args;\r\n\t-ms-animation-duration: $args;\r\n\tanimation-duration: $args;\r\n}\r\n\r\n@mixin animation-delay($args...) {\r\n\t-webkit-animation-delay: $args;\r\n\t-moz-animation-delay: $args;\r\n\t-o-animation-delay: $args;\r\n\t-ms-animation-delay: $args;\r\n\tanimation-delay: $args;\r\n}\r\n\r\n@mixin animation-timing-function($args...) {\r\n\t-webkit-animation-timing-function: $args;\r\n\t-moz-animation-timing-function: $args;\r\n\t-o-animation-timing-function: $args;\r\n\t-ms-animation-timing-function: $args;\r\n\tanimation-timing-function: $args;\r\n}\r\n\r\n@mixin animation-iteration-count($args...) {\r\n\t-webkit-animation-iteration-count: $args;\r\n\t-moz-animation-iteration-count: $args;\r\n\t-o-animation-iteration-count: $args;\r\n\t-ms-animation-iteration-count: $args;\r\n\tanimation-iteration-count: $args;\r\n}\r\n\r\n@mixin animation-play-state($args...) {\r\n\t-webkit-animation-play-state: $args;\r\n\t-moz-animation-play-state: $args;\r\n\t-o-animation-play-state: $args;\r\n\t-ms-animation-play-state: $args;\r\n\tanimation-play-state: $args;\r\n}\r\n\r\n@mixin column-count($args...) {\r\n\t-webkit-column-count: $args;\r\n\t-moz-column-count: $args;\r\n\t-o-column-count: $args;\r\n\t-ms-column-count: $args;\r\n\tcolumn-count: $args;\r\n}\r\n\r\n@mixin column-gap($args...) {\r\n\t-webkit-column-gap: $args;\r\n\t-moz-column-gap: $args;\r\n\t-o-column-gap: $args;\r\n\t-ms-column-gap: $args;\r\n\tcolumn-gap: $args;\r\n}\r\n\r\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff ttf svg) {\r\n\t$src: null;\r\n\r\n\t$extmods: (eot: \"?\",\r\n\t\tsvg: \"#\"+ str-replace($name, \" \", \"_\"));\r\n\r\n\t$formats: (otf: \"opentype\",\r\n\t\tttf: \"truetype\"\r\n\t\t);\r\n\r\n\t@each $ext in $exts {\r\n\t\t$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\r\n\t\t$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\r\n\t\t$src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\r\n\t}\r\n\r\n\t@font-face {\r\n\t\tfont-family: quote($name);\r\n\t\tfont-display: auto;\r\n\t\tfont-style: $style;\r\n\t\tfont-weight: $weight;\r\n\t\tsrc: $src;\r\n\t}\r\n}\r\n\r\n@mixin keyframes($animationName) {\r\n\t@-webkit-keyframes #{$animationName} {\r\n\t\t@content;\r\n\t}\r\n\t@-moz-keyframes #{$animationName} {\r\n\t\t@content;\r\n\t}\r\n\t@-o-keyframes #{$animationName} {\r\n\t\t@content;\r\n\t}\r\n\t@keyframes #{$animationName} {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n/// Mixin to prefix several properties at once\r\n/// @author Hugo Giraudel\r\n/// @param {Map} $declarations - Declarations to prefix\r\n/// @param {List} $prefixes (()) - List of prefixes to print\r\n@mixin prefix($declarations, $prefixes: ()) {\r\n  @each $property, $value in $declarations {\r\n    @each $prefix in $prefixes {\r\n      #{'-' + $prefix + '-' + $property}: $value;\r\n    }\r\n\r\n    // Output standard non-prefixed declaration\r\n    #{$property}: $value;\r\n  }\r\n}","@import \"includes/variables\";\r\n@import \"includes/mixins\";\r\n\r\n// sample\r\n// @include font-face(\"Acumin Pro Extra Condensed\", fonts/AcuminProExtraCondensed/AcuminProExtraCond-Medium, 500);\r\n\r\n// IONICONS\r\n\r\n@include font-face(\"Ionicons\", fonts/Ionicons/ionicons);\r\n\r\n\r\n// FUTURE PT\r\n\r\n@include font-face(\"Futura PT\", fonts/FuturaPT/FuturaPT-Demi);\r\n@include font-face(\"Futura PT\", fonts/FuturaPT/FuturaPT-Bold, bold);\r\n@include font-face(\"Futura PT\", fonts/FuturaPT/FuturaPT-Light, 300);\r\n\r\n@include font-face(\"Futura PT Demi\", fonts/FuturaPT/FuturaPT-Demi);\r\n@include font-face(\"Futura PT Bold\", fonts/FuturaPT/FuturaPT-Bold);\r\n@include font-face(\"Futura PT Light\", fonts/FuturaPT/FuturaPT-Light);"]}